<?php
/**
 * SurveyManager.
 *
 * @copyright Zikula Development Team
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package SurveyManager
 * @author Zikula Development Team <info@zikula.org>.
 * @link http://zikula.org
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.5 (http://modulestudio.de) at Tue Aug 21 20:13:14 CEST 2012.
 */

/**
 * Question type class for image uploads.
 * We inherit from SurveyManager_QuestionType_File instead of SurveyManager_AbstractQuestionType
 * in order to share all aspects which are common for both.
 */
class SurveyManager_QuestionType_Photo extends SurveyManager_QuestionType_File
{

    private $thumbnailHelper = null;

    /**
     * Returns the question type code.
     */
    public function getID()
    {
        return 'photo';
    }

    /**
     * Returns the question type name.
     */
    public function getName()
    {
        return $this->__('Photo');
    }

    /**
     * Returns the question type category.
     */
    public function getGroup()
    {
        return $this->__('Uploads');
    }

    /**
     * Returns output for preview pages.
     */
    public function getPreviewOutput($value)
    {
        $imageType = 'thumb';
        if (in_array(FormUtil::getPassedValue('func', 'main'), array('display', 'detailFeatured'))) {
            $imageType = 'display';
        }
        $ext = strrchr($value, '.');
        $output = '<img src="' . System::getBaseUrl() . DataUtil::formatForDisplay(str_replace($ext, '_' . $imageType . $ext, $value)) . '" alt="' . DataUtil::formatForDisplay(stripslashes(basename($value))) . '" />';
        return $output;
    }

    /**
     * Returns the editing ui component(s).
     */
    public function getEditInput($question, $response, $context = '')
    {
        $questionId = $question['id'];    
        $output = '<input type="file" id="responses_' . $questionId . '" name="responses_' . $questionId . '" />' . "\n";
        $output .= "<br />\n";
        $output .= $this->__f('Maximum file size: %s kb', array($this->getVar('maxFileSizeKb'))) . ' ' . $this->__('(JPEG, GIF or PNG only)');
        if ($response != '') {
            $output .= "<br />\n";
            $output .= $this->__('You uploaded') . ' ' . $this->getPreviewOutput($response);
            if ($context == 'admin_response_edit') {
                $output .= ' (<input type="checkbox" name="delete_files[' . $questionId . ']" id="delete_files_' . $questionId . '" value="1" /> ' . $this->__('Delete') . ')';
            }
            $output .= ".\n";
        }

        if ($context == 'block_survey_display') {
            $output .= '<br />';
        }
        return $output;
    }

    /**
     * Deletes an old upload file.
     */
    protected function removeFile($file)
    {
        parent::removeFile($file);

        $uploadDirectory = $this->getVar('fileUploadDirectory');
        $thumbnailHelper = new SurveyManager_Util_Thumbnail($this->serviceManager, $file, $uploadDirectory);
        $thumbnailHelper->delete('thumb');
        $thumbnailHelper->delete('display');
    }

    /**
     * Processes a file upload.
     */
    protected function uploadFile($file)
    {
        $result = parent::uploadFile($file, $uploadDirectory);
        if ($result !== '' && $result !== false) {
            $uploadDirectory = $this->getVar('fileUploadDirectory');
            $thumbnailHelper = new SurveyManager_Util_Thumbnail($this->serviceManager, $result, $uploadDirectory);
            $thumbnailHelper->make('display');
            $thumbnailHelper->make('thumb');
        }
        return $result;
    }
}
