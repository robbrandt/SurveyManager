<?php
/**
 * SurveyManager.
 *
 * @copyright Zikula Development Team
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package SurveyManager
 * @author Zikula Development Team <info@zikula.org>.
 * @link http://zikula.org
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.5 (http://modulestudio.de) at Tue Aug 21 20:13:14 CEST 2012.
 */

/**
 * Question type class for topics.
 */
class SurveyManager_QuestionType_Topic extends SurveyManager_AbstractQuestionType
{
    /**
     * Returns the question type code.
     */
    public function getID()
    {
        return 'topic';
    }

    /**
     * Returns the question type name.
     */
    public function getName()
    {
        return $this->__('Topic');
    }

    /**
     * Returns the question type category.
     */
    public function getGroup()
    {
        return $this->__('Education');
    }

    /**
     * Returns label or description for editing.
     */
    public function getEditIntro($question, $withDescription = false, $context = '')
    {
        if ($context == 'admin_response_edit') {
            return parent::getEditIntro($question, $withDescription, $context);
        }

        return '';
    }

    /**
     * Returns the editing ui component(s).
     */
    public function getEditInput($question, $response, $context = '')
    {
        if ($context == 'admin_response_edit') {
            return $this->getEditInputDefault($question, $response, $context);
        }
        // create hidden field for display in user area and block
        return $this->getHiddenInput($question, $this->getTopic());
    }

    /**
     * Selects a certain topic.
     */
    protected function getTopic()
    {
        if (!ModUtil::available('Pagesetter')) {
            return '';
        }

        ModUtil::dbInfoLoad('Pagesetter');
        $uname = UserUtil::getVar('uname');

        $sql = "SELECT nuke_pagesetter_pubdata2.pg_author, nuke_pagesetter_pubdata2.pg_pid, nuke_pagesetter_pubdata7.*
                FROM `nuke_pagesetter_pubdata2`
                LEFT JOIN nuke_pagesetter_relations ON ( pg_tid1 =2 AND pg_pid1 = nuke_pagesetter_pubdata2.pg_pid AND pg_fieldid1 = '152' AND pg_tid2 =7 )
                LEFT JOIN nuke_pagesetter_pubdata7 ON ( nuke_pagesetter_relations.pg_pid2 = nuke_pagesetter_pubdata7.pg_pid AND nuke_pagesetter_pubdata7.pg_online =1 )
                WHERE nuke_pagesetter_pubdata2.`pg_author` LIKE '%".$uname."%'
                ORDER BY nuke_pagesetter_pubdata2.pg_pid ASC";

        $result = $dbconn->SelectLimit($sql, 10, 0);
        
        for (; !$result->EOF; $result->MoveNext()) {
            $authors = explode(',', $result->fields[0]);
            foreach ($authors as $author) {
                if ($uname == $author) {
                    $lasttopic = $result->fields[3];
                }
            }
        }

        if (!empty($params['assign'])) {
            $smarty->assign($params['assign'], $lasttopic);
            return;
        }
        return $lasttopic;
    }

    /**
     * Checks if a given value is correct.
     */
    public function validateInput($question, $inputValue)
    {
        return true;
    }
}
